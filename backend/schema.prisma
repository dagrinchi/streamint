// This file is automatically generated by Keystone, do not modify it manually.
// Modify your Keystone config when you want to change this.

datasource sqlite {
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
  provider          = "sqlite"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String    @id @default(cuid())
  name           String    @default("")
  email          String    @unique @default("")
  password       String
  role           String    @default("[]")
  wallet         Wallet?   @relation("User_wallet", fields: [walletId], references: [id])
  walletId       String?   @unique @map("wallet")
  posts          Post[]    @relation("Post_author")
  createdAt      DateTime? @default(now())
  from_Ad_author Ad[]      @relation("Ad_author")
}

model Wallet {
  id        String @id @default(cuid())
  user      User?  @relation("User_wallet")
  address   String @default("")
  publickey String @default("")
}

model Ad {
  id             String  @id @default(cuid())
  title          String  @default("")
  starts         String
  ends           String
  description    String  @default("")
  status         String?
  video_filesize Int?
  video_filename String?
  tags           Tag[]   @relation("Ad_tags")
  author         User?   @relation("Ad_author", fields: [authorId], references: [id])
  authorId       String? @map("author")

  @@index([authorId])
}

model Post {
  id             String    @id @default(cuid())
  title          String    @default("")
  description    String    @default("")
  status         String?
  video_filesize Int?
  video_filename String?
  tags           Tag[]     @relation("Post_tags")
  author         User?     @relation("Post_author", fields: [authorId], references: [id])
  authorId       String?   @map("author")
  assignment     String?
  createdAt      DateTime? @default(now())

  @@index([authorId])
}

model Tag {
  id    String @id @default(cuid())
  name  String @default("")
  ads   Ad[]   @relation("Ad_tags")
  posts Post[] @relation("Post_tags")
}
